{"version":3,"sources":["components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","Typography","variant","className","Button","color","href","App","Container","fixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,OAIX,SAASK,IACZ,IAAMC,EAAUV,IAEhB,OACI,cAACW,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWN,EAAQF,MAA5C,sBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,wGAA7B,gC,YCHDC,MAtBf,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,cAACP,EAAD,IACA,eAACY,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,0CACA,gpBAGA,+BACE,mNACA,0IACA,mIACA,yKACA,oJAEF,wfAA8F,mDCPvFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83393175.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport function Navbar() {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                    TaigaBot\n                </Typography>\n                <Button color=\"inherit\" href=\"https://discord.com/api/oauth2/authorize?client_id=669156162473689088&permissions=469924912&scope=bot\">Add to server</Button>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import { Navbar } from './components/Navbar.jsx'\nimport Container from '@material-ui/core/Container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Container fixed>\n        <h1>TaigaBot</h1>\n        <p>\n          Если вы когда-нибудь хотели простого бота, который бы выполнял все необходимые задачи, то это ваш выбор. Тайга поможет вам:\n        </p>\n        <ul>\n          <li>Дать пользователям цветовые роли</li>\n          <li>Хранить ваши задачи</li>\n          <li>Удалять сообщения</li>\n          <li>Выдавать роли для ивентов</li>\n          <li>И конечно исать аниме</li>\n        </ul>\n        <p>Полный список всех возможностей бота вы можете узнать добавив его на свой сервер и написав <code>!help</code></p>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}